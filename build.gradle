buildscript {
  repositories {
    jcenter()
    maven { url = "http://files.minecraftforge.net/maven" }
  }
  dependencies {
    classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
  }
}
apply plugin: 'net.minecraftforge.gradle.forge'

// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
version = "1.0.0"
group = "com.jinpalhawang.jambudvipa" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "coppermod"

sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8 // Need this here so eclipse task generates correctly.
compileJava {
  sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8
}

minecraft {
  version = "1.11.2-13.20.0.2206"
  runDir = "run"
  mappings = "snapshot_20161220"
}

// In this section you declare the dependencies for your production and test code
dependencies {
  // The production code uses the SLF4J logging API at compile time
  compile 'org.slf4j:slf4j-api:1.7.21'

  // Declare the dependency for your favourite test framework you want to use in your tests.
  // TestNG is also supported by the Gradle Test task. Just change the
  // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
  // 'test.useTestNG()' to your build script.
  testCompile 'junit:junit:4.12'
}

processResources {
  // this will ensure that this task is redone when the versions change.
  inputs.property "version", project.version
  inputs.property "mcversion", project.minecraft.version

  // replace stuff in mcmod.info, nothing else
  from(sourceSets.main.resources.srcDirs) {
    include 'mcmod.info'
    // replace version and mcversion
    expand 'version':project.version, 'mcversion':project.minecraft.version
  }

  // copy everything else, thats not the mcmod.info
  from(sourceSets.main.resources.srcDirs) {
    exclude 'mcmod.info'
  }

}
